import { paramsProxy } from "../params.js";

/**
 * #!MetodaZwracaDokumentySprzedazoweIMagazynoweWUniwersalnymFormacieJPK!#.
 * @typedef {Object} GetOrdersExportdocumentsJPKRequest
 * @property {(documentType: String) => GetOrdersExportdocumentsJPKRequest} documentType Document type
 * @property {(fileId: Integer) => GetOrdersExportdocumentsJPKRequest} fileId JPK file identifier to download.
 * @property {(documentVersion: Integer) => GetOrdersExportdocumentsJPKRequest} documentVersion JPK format version. If empty, takes the latest version number.
 * @property {(schemaVersion: String) => GetOrdersExportdocumentsJPKRequest} schemaVersion Schema version
 * @property {(dateBegin: String) => GetOrdersExportdocumentsJPKRequest} dateBegin Beginning date in YYYY-MM-DD HH:MM:SS format. (JPK_FA, JPK_MAG)
 * @property {(dateEnd: String) => GetOrdersExportdocumentsJPKRequest} dateEnd Ending date in YYYY-MM-DD HH:MM:SS format. (JPK_FA, JPK_MAG)
 * @property {(month: Integer) => GetOrdersExportdocumentsJPKRequest} month Billing month for which to generate the document. (JPK_VAT)
 * @property {(year: Integer) => GetOrdersExportdocumentsJPKRequest} year Billing year for which to generate the document. (JPK_VAT)
 * @property {(currency: String) => GetOrdersExportdocumentsJPKRequest} currency Currency symbol in ISO 4217 format.
 * @property {(shop: Array<Integer>) => GetOrdersExportdocumentsJPKRequest} shop Store ID only required if a specific store is selected.
 * @property {(stockId: Array<Integer>) => GetOrdersExportdocumentsJPKRequest} stockId Stock ID
 * @property {(forceBackgroundGenerate: Boolean) => GetOrdersExportdocumentsJPKRequest} forceBackgroundGenerate Forces the file to be generated by background tasks. The file will be generated later. Then, after it is generated, you will be able to download the given file using the returned ID. The file will be available 24h after the task is completed.
 * @property {(options: Object) => IdosellResponse} exec Excecute request
 */

/**
 * @returns {GetOrdersExportdocumentsJPKRequest} #!MetodaZwracaDokumentySprzedazoweIMagazynoweWUniwersalnymFormacieJPK!#.
 */
export const getOrdersExportdocumentsJPKProxy = (object) => {
    object.gate = { method: 'get', node: '/orders/exportdocuments/JPK' }
    return new Proxy(object, paramsProxy);
}